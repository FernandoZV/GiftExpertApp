{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifts.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","placeholder","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifts","category","a","encodeURI","fetch","resp","json","data","gifts","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"8KAoCeA,EAjCK,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAEpB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,YAAY,uBACZC,MAAQV,EACRW,SAnBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,a,QCOhBG,EAbK,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC9B,OACI,qBAAKC,UAAU,WAAf,SACI,sBAAKA,UAAU,2CAAf,UACI,qBAAKC,IAAMF,EAAMC,UAAU,eAAeE,IAAMJ,IAChD,qBAAKE,UAAU,YAAf,SACI,mBAAGA,UAAU,YAAb,SAA2BF,Y,uBCPtCK,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEVN,EAFU,iDAEuCO,UAAUF,GAFjD,gEAGGG,MAAOR,GAHV,cAGVS,EAHU,gBAIOA,EAAKC,OAJZ,uBAIRC,EAJQ,EAIRA,KAEFC,EAAQD,EAAKE,KAAK,SAAAC,GACpB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAKc,EAAIC,OAAOC,iBAAiBhB,QAVzB,kBAcTY,GAdS,4CAAH,sDAiBFR,ICiBAa,EA5BC,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAEf,ECNwB,SAAEA,GAE1B,MAA0BtB,mBAAS,CAC/B4B,KAAM,GACNO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAW,WAEPjB,EAAUC,GACLiB,MAAK,SAAAC,GACEH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAI1B,CAACb,IAEGc,EDbkBK,CAAcnB,GAA/BM,EAAR,EAAQA,KAAMO,EAAd,EAAcA,QAEd,OACI,sBAAKjB,UAAU,qDAAf,UAEIiB,GAAW,mBAAGjB,UAAU,mCAAb,yBAEX,qBAAKA,UAAU,cAAf,SACMI,IAEN,qBAAKJ,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SAEIU,EAAKE,KAAK,SAAAC,GAAG,OACT,cAAC,EAAD,eAESA,GADCA,EAAIhB,eEIvB2B,EAxBM,WAEjB,MAAoC1C,mBAAS,IAA7C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,qBAAKmB,UAAU,MAAf,SAEQyB,EAAWb,KAAK,SAAAR,GAAQ,OACxB,cAAC,EAAD,CACCA,SAAWA,GACLA,YCd3BsB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.3c96ec02.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ( { setCategorias } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategorias( cats => [inputValue, ...cats] );\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                placeholder=\"Agrege una categoria\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","import React from 'react'\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n    return (\r\n        <div className=\"col-md-2\">\r\n            <div className=\"card animate__animated animate__fadeInUp\">\r\n                <img src={ url } className=\"card-img-top\" alt={ title } />\r\n                <div className=\"card-body\">\r\n                    <p className=\"card-text\">{ title }</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;\r\n","\r\n   const getGifts = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) } &limit=10&api_key=oQBneWGIo93wb2mbMiqiV82qu23yKiOX`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifts = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        };\r\n    } );\r\n\r\n    return gifts;\r\n};\r\n\r\nexport default getGifts;","// import { useState, useEffect } from 'react'\r\n// import getGifts from '../helpers/getGifts';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const { data, loading} = useFetchGifs( category );\r\n\r\n    return (\r\n        <div className=\"col-md-12 card animate__animated animate__fadeInUp\">\r\n            {\r\n            loading && <p className=\"animate__animated animate__flash\">Cargando...</p>\r\n            }\r\n            <div className=\"card-header\">\r\n                { category }\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                {\r\n                    data.map( img => \r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            { ...img }\r\n                        />\r\n                    )\r\n                }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from 'react';\r\nimport getGifts from '../helpers/getGifts';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        \r\n        getGifts( category )\r\n            .then(imgs => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n            });\r\n\r\n    }, [category] );\r\n\r\n    return state;\r\n}","import { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categorias, setCategorias] = useState([]);\r\n\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategorias={ setCategorias }></AddCategory>\r\n            <hr></hr>\r\n\r\n            <div className=\"row\">\r\n                {\r\n                    categorias.map( category => \r\n                    <GifGrid\r\n                     category={ category }\r\n                     key={ category }\r\n                      /> \r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}